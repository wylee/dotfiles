alias back='cd -'

alias j='jobs'
alias 1='%1'
alias 2='%2'
alias 3='%3'
alias 4='%4'
alias 5='%5'
alias 6='%6'
alias 7='%7'
alias 8='%8'
alias 9='%9'

function x {
    local j="$(jobs)"
    if [ "$j" ]; then
        echo "There are jobs running (kill them or use exit directly):"
        echo "${j}"
        return 1
    fi
    exit
}

case $OSTYPE in
    linux-gnu*)
        alias ls='/bin/ls -F --color'
        alias lsa='/bin/ls -aF --color'
        alias lsl='/bin/ls -lF --color'
        alias lsal='/bin/ls -alF --color'
        ;;
    darwin*)
        alias ls='/bin/ls -FG'
        alias lsa='/bin/ls -aFG'
        alias lsl='/bin/ls -lFG'
        alias lsal='/bin/ls -alFG'
        ;;
    *)
        echo 'No ls aliases set (could not determine OS type).' 1>&2
        ;;
esac

# Go up one or directories
# Less tedious than `cd ../../../../...`
function up {
    times=${1:-1}
    dir="$(pwd)"
    for (( i=0; i<times; ++i )); do
        dir="$(dirname $dir)"
    done
    cd "${dir}"
}

apt=$(which aptitude apt-get 2>/dev/null | head -1)
if [ "$apt" ]; then
    alias update="sudo $apt update"
    alias upgrade="sudo $apt upgrade"
    alias upgrade-d="sudo $apt dist-upgrade"
fi

# Brown noise
function bn {
    # Kill brown noise script if running.
    # Start brown noise script if not running.
    killbn || runbn
}

function runbn {
    # Run brown noise script.
    #
    # Returns:
    #     0: Script was started
    #     1: Script was not started (already running)
    local pid_file="${HOME}/.brown-noise.pid"
    if [ -f "$pid_file" ]; then
        echo "Brown noise script with PID '$pid' already running" 1>&2
        echo "Clean up first with kilbn" 1>&2
        return 1
    fi
    AUDIODEV="Built-in Output" \
    play -q -c 2 --null \
        synth brownnoise \
        band -n 1500 1500 \
        tremolo .0333333 30 \
        reverb &
    local PID=$!
    echo -n $PID > "$pid_file"
    echo "Brown noise script started"
    return 0
}

function killbn {
    # Kill brown noise script.
    #
    # Returns:
    #     0: Script was killed
    #     1: Script was not running
    #     2: Script could not be killed
    local pid_file="${HOME}/.brown-noise.pid"
    if [ -f "$pid_file" ]; then
        local pid="$(cat "$pid_file")"
        if kill -s kill $pid; then
            rm "$pid_file"
            echo "Brown noise script with PID $pid killed"
            return 0
        else
            echo "Brown noise script with PID '$pid' could not be killed" 1>&2
            return 2
        fi
    else
        echo "Brown noise script not running" 1>&2
        return 1
    fi
}
