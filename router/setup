#!/bin/bash
# SSH to the router and execute the command below
#
# TODO: Add user setup
# TODO: Add SSH setup
# TODO: Convert this to a script
#
# Default username:password = ubnt:ubnt

# Router UI ------------------------------------------------------------

open http://192.168.1.1/
# - Log in with default credentials
# - Run the Basic Setup wizard
#   - Do NOT use public DNS servers
#   - Create new admin user wyatt
# - Configure eth4 PoE to 48v for wireless AP

# Local ----------------------------------------------------------------

# Create SSH key pair if necessary, noting that the comment field after
# the key is REQUIRED.
ssh-keygen -t rsa -f ~/.ssh/id_rsa-router
scp ~/.ssh/id_rsa-router.pub 192.168.1.1:~/ssh-key.pub

# NOTE: Use the password for the user created above in the router UI
ssh 192.168.1.1

# Enter config mode
configure

# Basics ---------------------------------------------------------------

set system host-name rauter
set system domain-name home.lan
set system time-zone America/Los_Angeles

# Auth -----------------------------------------------------------------

loadkey wyatt ssh-key.pub
set service ssh disable-password-authentication

# DNS ------------------------------------------------------------------
#
# NOTE: I'm not sure about this DNS config. Skip for now.

# Delete any existing DNS services if they point at public DNS servers
# I don't think this is necessary with the default config
# delete service dhcp-server shared-network-name LAN1 subnet 192.168.1.0/24 dns-server <IP>
# delete service dhcp-server shared-network-name LAN2 subnet 192.168.2.0/24 dns-server <IP>

# Make DHCP use local DNS only
set service dhcp-server shared-network-name LAN1 subnet 192.168.1.0/24 dns-server 192.168.1.1
set service dhcp-server shared-network-name LAN2 subnet 192.168.2.0/24 dns-server 192.168.2.1

# Use the local DNS server
set system name-server 127.0.0.1
set system name-server '::1'

# XXX: Should this include other interfaces?
set service dns forwarding listen-on eth1
set service dns forwarding listen-on switch0

# Alternative interface config
# XXX: This seems to cause issues
# set service dns forwarding except-interface eth0

# Forward to public DNS servers
set service dns forwarding name-server 1.1.1.1
set service dns forwarding name-server 1.0.0.1
set service dns forwarding name-server 8.8.8.8
set service dns forwarding name-server 9.9.9.9

set service dns forwarding cache-size 512
set service dns forwarding options bogus-priv
set service dns forwarding options domain-needed

# Ignore /etc/hosts
set service dns forwarding options no-hosts

# These are recommended one site, but I'm not sure what they do
# set service dns forwarding options enable-ra
# set service dns forwarding options expand-hosts
# set service dns forwarding options localise-queries
# set service dns forwarding options strict-order
# set service dns forwarding options domain=home.local

# Enable dnsmasq
set service dhcp-server use-dnsmasq enable

# DNS blackhole
# Copy file with blackhole entries to /etc/dnsmasq.d/
#
# Entries look like:
#
#     address=/0.0.0.0/0.0.0.0
#     address=/example.com/0.0.0.0

# Save and exit config mode
commit
save
exit

reboot # ???
